#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.36399
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserHospital
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB")]
	public partial class PatientInformationDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPatientData(PatientData instance);
    partial void UpdatePatientData(PatientData instance);
    partial void DeletePatientData(PatientData instance);
    #endregion
		
		public PatientInformationDataContext() : 
				base(global::UserHospital.Properties.Settings.Default.DBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PatientInformationDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PatientInformationDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PatientInformationDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PatientInformationDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PatientData> PatientDatas
		{
			get
			{
				return this.GetTable<PatientData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatientData")]
	public partial class PatientData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _PregDate;
		
		private string _Pname;
		
		private string _Pgender;
		
		private string _Poccupation;
		
		private string _Pdob;
		
		private string _Page;
		
		private string _PbloodGroup;
		
		private string _PmaritialStatus;
		
		private string _Paddress;
		
		private string _Pcity;
		
		private string _Pcountry;
		
		private string _PcontactNo;
		
		private string _Pdepartment;
		
		private string _PconsultantName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPregDateChanging(string value);
    partial void OnPregDateChanged();
    partial void OnPnameChanging(string value);
    partial void OnPnameChanged();
    partial void OnPgenderChanging(string value);
    partial void OnPgenderChanged();
    partial void OnPoccupationChanging(string value);
    partial void OnPoccupationChanged();
    partial void OnPdobChanging(string value);
    partial void OnPdobChanged();
    partial void OnPageChanging(string value);
    partial void OnPageChanged();
    partial void OnPbloodGroupChanging(string value);
    partial void OnPbloodGroupChanged();
    partial void OnPmaritialStatusChanging(string value);
    partial void OnPmaritialStatusChanged();
    partial void OnPaddressChanging(string value);
    partial void OnPaddressChanged();
    partial void OnPcityChanging(string value);
    partial void OnPcityChanged();
    partial void OnPcountryChanging(string value);
    partial void OnPcountryChanged();
    partial void OnPcontactNoChanging(string value);
    partial void OnPcontactNoChanged();
    partial void OnPdepartmentChanging(string value);
    partial void OnPdepartmentChanged();
    partial void OnPconsultantNameChanging(string value);
    partial void OnPconsultantNameChanged();
    #endregion
		
		public PatientData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PregDate", DbType="VarChar(50)")]
		public string PregDate
		{
			get
			{
				return this._PregDate;
			}
			set
			{
				if ((this._PregDate != value))
				{
					this.OnPregDateChanging(value);
					this.SendPropertyChanging();
					this._PregDate = value;
					this.SendPropertyChanged("PregDate");
					this.OnPregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pname", DbType="VarChar(50)")]
		public string Pname
		{
			get
			{
				return this._Pname;
			}
			set
			{
				if ((this._Pname != value))
				{
					this.OnPnameChanging(value);
					this.SendPropertyChanging();
					this._Pname = value;
					this.SendPropertyChanged("Pname");
					this.OnPnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pgender", DbType="VarChar(50)")]
		public string Pgender
		{
			get
			{
				return this._Pgender;
			}
			set
			{
				if ((this._Pgender != value))
				{
					this.OnPgenderChanging(value);
					this.SendPropertyChanging();
					this._Pgender = value;
					this.SendPropertyChanged("Pgender");
					this.OnPgenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poccupation", DbType="VarChar(50)")]
		public string Poccupation
		{
			get
			{
				return this._Poccupation;
			}
			set
			{
				if ((this._Poccupation != value))
				{
					this.OnPoccupationChanging(value);
					this.SendPropertyChanging();
					this._Poccupation = value;
					this.SendPropertyChanged("Poccupation");
					this.OnPoccupationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pdob", DbType="VarChar(50)")]
		public string Pdob
		{
			get
			{
				return this._Pdob;
			}
			set
			{
				if ((this._Pdob != value))
				{
					this.OnPdobChanging(value);
					this.SendPropertyChanging();
					this._Pdob = value;
					this.SendPropertyChanged("Pdob");
					this.OnPdobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page", DbType="VarChar(50)")]
		public string Page
		{
			get
			{
				return this._Page;
			}
			set
			{
				if ((this._Page != value))
				{
					this.OnPageChanging(value);
					this.SendPropertyChanging();
					this._Page = value;
					this.SendPropertyChanged("Page");
					this.OnPageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PbloodGroup", DbType="VarChar(50)")]
		public string PbloodGroup
		{
			get
			{
				return this._PbloodGroup;
			}
			set
			{
				if ((this._PbloodGroup != value))
				{
					this.OnPbloodGroupChanging(value);
					this.SendPropertyChanging();
					this._PbloodGroup = value;
					this.SendPropertyChanged("PbloodGroup");
					this.OnPbloodGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PmaritialStatus", DbType="VarChar(50)")]
		public string PmaritialStatus
		{
			get
			{
				return this._PmaritialStatus;
			}
			set
			{
				if ((this._PmaritialStatus != value))
				{
					this.OnPmaritialStatusChanging(value);
					this.SendPropertyChanging();
					this._PmaritialStatus = value;
					this.SendPropertyChanged("PmaritialStatus");
					this.OnPmaritialStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paddress", DbType="VarChar(50)")]
		public string Paddress
		{
			get
			{
				return this._Paddress;
			}
			set
			{
				if ((this._Paddress != value))
				{
					this.OnPaddressChanging(value);
					this.SendPropertyChanging();
					this._Paddress = value;
					this.SendPropertyChanged("Paddress");
					this.OnPaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pcity", DbType="VarChar(50)")]
		public string Pcity
		{
			get
			{
				return this._Pcity;
			}
			set
			{
				if ((this._Pcity != value))
				{
					this.OnPcityChanging(value);
					this.SendPropertyChanging();
					this._Pcity = value;
					this.SendPropertyChanged("Pcity");
					this.OnPcityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pcountry", DbType="VarChar(50)")]
		public string Pcountry
		{
			get
			{
				return this._Pcountry;
			}
			set
			{
				if ((this._Pcountry != value))
				{
					this.OnPcountryChanging(value);
					this.SendPropertyChanging();
					this._Pcountry = value;
					this.SendPropertyChanged("Pcountry");
					this.OnPcountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PcontactNo", DbType="VarChar(50)")]
		public string PcontactNo
		{
			get
			{
				return this._PcontactNo;
			}
			set
			{
				if ((this._PcontactNo != value))
				{
					this.OnPcontactNoChanging(value);
					this.SendPropertyChanging();
					this._PcontactNo = value;
					this.SendPropertyChanged("PcontactNo");
					this.OnPcontactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pdepartment", DbType="VarChar(50)")]
		public string Pdepartment
		{
			get
			{
				return this._Pdepartment;
			}
			set
			{
				if ((this._Pdepartment != value))
				{
					this.OnPdepartmentChanging(value);
					this.SendPropertyChanging();
					this._Pdepartment = value;
					this.SendPropertyChanged("Pdepartment");
					this.OnPdepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PconsultantName", DbType="VarChar(50)")]
		public string PconsultantName
		{
			get
			{
				return this._PconsultantName;
			}
			set
			{
				if ((this._PconsultantName != value))
				{
					this.OnPconsultantNameChanging(value);
					this.SendPropertyChanging();
					this._PconsultantName = value;
					this.SendPropertyChanged("PconsultantName");
					this.OnPconsultantNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
