#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserHospital
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB")]
	public partial class DocDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDoctor(Doctor instance);
    partial void UpdateDoctor(Doctor instance);
    partial void DeleteDoctor(Doctor instance);
    #endregion
		
		public DocDataDataContext() : 
				base(global::UserHospital.Properties.Settings.Default.DBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DocDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DocDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Doctor> Doctors
		{
			get
			{
				return this.GetTable<Doctor>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doctor")]
	public partial class Doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DregDate;
		
		private string _DName;
		
		private string _Dgender;
		
		private string _Ddepartment;
		
		private string _Ddob;
		
		private string _Dage;
		
		private string _DbloodGroup;
		
		private string _DmaritialStatus;
		
		private string _Daddress;
		
		private string _Dcity;
		
		private string _Dcountry;
		
		private string _DcontactNo;
		
		private string _DpatientList;
		
		private string _DuserName;
		
		private string _Dpassword;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDregDateChanging(string value);
    partial void OnDregDateChanged();
    partial void OnDNameChanging(string value);
    partial void OnDNameChanged();
    partial void OnDgenderChanging(string value);
    partial void OnDgenderChanged();
    partial void OnDdepartmentChanging(string value);
    partial void OnDdepartmentChanged();
    partial void OnDdobChanging(string value);
    partial void OnDdobChanged();
    partial void OnDageChanging(string value);
    partial void OnDageChanged();
    partial void OnDbloodGroupChanging(string value);
    partial void OnDbloodGroupChanged();
    partial void OnDmaritialStatusChanging(string value);
    partial void OnDmaritialStatusChanged();
    partial void OnDaddressChanging(string value);
    partial void OnDaddressChanged();
    partial void OnDcityChanging(string value);
    partial void OnDcityChanged();
    partial void OnDcountryChanging(string value);
    partial void OnDcountryChanged();
    partial void OnDcontactNoChanging(string value);
    partial void OnDcontactNoChanged();
    partial void OnDpatientListChanging(string value);
    partial void OnDpatientListChanged();
    partial void OnDuserNameChanging(string value);
    partial void OnDuserNameChanged();
    partial void OnDpasswordChanging(string value);
    partial void OnDpasswordChanged();
    #endregion
		
		public Doctor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DregDate", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DregDate
		{
			get
			{
				return this._DregDate;
			}
			set
			{
				if ((this._DregDate != value))
				{
					this.OnDregDateChanging(value);
					this.SendPropertyChanging();
					this._DregDate = value;
					this.SendPropertyChanged("DregDate");
					this.OnDregDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DName
		{
			get
			{
				return this._DName;
			}
			set
			{
				if ((this._DName != value))
				{
					this.OnDNameChanging(value);
					this.SendPropertyChanging();
					this._DName = value;
					this.SendPropertyChanged("DName");
					this.OnDNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dgender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Dgender
		{
			get
			{
				return this._Dgender;
			}
			set
			{
				if ((this._Dgender != value))
				{
					this.OnDgenderChanging(value);
					this.SendPropertyChanging();
					this._Dgender = value;
					this.SendPropertyChanged("Dgender");
					this.OnDgenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ddepartment", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Ddepartment
		{
			get
			{
				return this._Ddepartment;
			}
			set
			{
				if ((this._Ddepartment != value))
				{
					this.OnDdepartmentChanging(value);
					this.SendPropertyChanging();
					this._Ddepartment = value;
					this.SendPropertyChanged("Ddepartment");
					this.OnDdepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ddob", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Ddob
		{
			get
			{
				return this._Ddob;
			}
			set
			{
				if ((this._Ddob != value))
				{
					this.OnDdobChanging(value);
					this.SendPropertyChanging();
					this._Ddob = value;
					this.SendPropertyChanged("Ddob");
					this.OnDdobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dage", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Dage
		{
			get
			{
				return this._Dage;
			}
			set
			{
				if ((this._Dage != value))
				{
					this.OnDageChanging(value);
					this.SendPropertyChanging();
					this._Dage = value;
					this.SendPropertyChanged("Dage");
					this.OnDageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DbloodGroup", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DbloodGroup
		{
			get
			{
				return this._DbloodGroup;
			}
			set
			{
				if ((this._DbloodGroup != value))
				{
					this.OnDbloodGroupChanging(value);
					this.SendPropertyChanging();
					this._DbloodGroup = value;
					this.SendPropertyChanged("DbloodGroup");
					this.OnDbloodGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DmaritialStatus", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DmaritialStatus
		{
			get
			{
				return this._DmaritialStatus;
			}
			set
			{
				if ((this._DmaritialStatus != value))
				{
					this.OnDmaritialStatusChanging(value);
					this.SendPropertyChanging();
					this._DmaritialStatus = value;
					this.SendPropertyChanged("DmaritialStatus");
					this.OnDmaritialStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Daddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Daddress
		{
			get
			{
				return this._Daddress;
			}
			set
			{
				if ((this._Daddress != value))
				{
					this.OnDaddressChanging(value);
					this.SendPropertyChanging();
					this._Daddress = value;
					this.SendPropertyChanged("Daddress");
					this.OnDaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dcity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Dcity
		{
			get
			{
				return this._Dcity;
			}
			set
			{
				if ((this._Dcity != value))
				{
					this.OnDcityChanging(value);
					this.SendPropertyChanging();
					this._Dcity = value;
					this.SendPropertyChanged("Dcity");
					this.OnDcityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dcountry", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Dcountry
		{
			get
			{
				return this._Dcountry;
			}
			set
			{
				if ((this._Dcountry != value))
				{
					this.OnDcountryChanging(value);
					this.SendPropertyChanging();
					this._Dcountry = value;
					this.SendPropertyChanged("Dcountry");
					this.OnDcountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DcontactNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DcontactNo
		{
			get
			{
				return this._DcontactNo;
			}
			set
			{
				if ((this._DcontactNo != value))
				{
					this.OnDcontactNoChanging(value);
					this.SendPropertyChanging();
					this._DcontactNo = value;
					this.SendPropertyChanged("DcontactNo");
					this.OnDcontactNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DpatientList", DbType="VarChar(50)")]
		public string DpatientList
		{
			get
			{
				return this._DpatientList;
			}
			set
			{
				if ((this._DpatientList != value))
				{
					this.OnDpatientListChanging(value);
					this.SendPropertyChanging();
					this._DpatientList = value;
					this.SendPropertyChanged("DpatientList");
					this.OnDpatientListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string DuserName
		{
			get
			{
				return this._DuserName;
			}
			set
			{
				if ((this._DuserName != value))
				{
					this.OnDuserNameChanging(value);
					this.SendPropertyChanging();
					this._DuserName = value;
					this.SendPropertyChanged("DuserName");
					this.OnDuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dpassword", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Dpassword
		{
			get
			{
				return this._Dpassword;
			}
			set
			{
				if ((this._Dpassword != value))
				{
					this.OnDpasswordChanging(value);
					this.SendPropertyChanging();
					this._Dpassword = value;
					this.SendPropertyChanged("Dpassword");
					this.OnDpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
